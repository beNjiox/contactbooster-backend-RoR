FORMAT: 1A
HOST: http://contactbooster-rails.herokuapp.com/

# contactbooster/rails
API using rails-api for contactbooster app.

# Group List

## Lists Collection [/lists]

+ Model (application/json; charset=utf-8)

        [{
          "id": 1,
          "name": "friends",
          "position": 0
        },
        {
          "id": 2,
          "name": "family",
          "position": 1
        }]


### List all Lists [GET]

+ Response 200 (application/json; charset=utf-8)

        [Lists Collection][]


### Create a List [POST]
+ Request (application/json; charset=utf-8)

        { 
            "name": "Work",
            "position": 2
        }

+ Response 201 (application/json; charset=utf-8)

        { "id": 3, "title": "Work", "position": 2 }

## List [/lists/{id}]
A single List object with all its contacts

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the List to perform action with. Has example value.

### Retrieve a List [GET]
+ Response 200 (application/json; charset=utf-8)

        { 
            "id": 2,
            "title": "family",
            "position": 1
        }

+ Response 404 (application/json; charset=utf-8)

        {
          "error": "resource not found."
        }

### Remove a List [DELETE]
+ Response 204

+ Response 404 (application/json; charset=utf-8)

        {
          "error": "resource not found."
        }


### Update a List [PATCH]

+ Request (application/json; charset=utf-8)

        {
            "title": "Work"
        }

+ Response 200

        { 
            "id": 2,
            "title": "Work",
            "position": 1
        }

+ Response 404 (application/json; charset=utf-8)

        {
          "error": "resource not found."
        }

# Group Contact

## Contacts Collection [/lists/{list_id}/contacts]
### List all Contacts [GET]

+ Response 200 (application/json; charset=utf-8)

        [{
          "id": 1,
          "list_id": 1,
          "lastname": "Jordan",
          "firstname": "Michael",
          "phone": "5555544444"
        },
        {
          "id": 1,
          "list_id": 1,
          "lastname": "Pippen",
          "firstname": "Scottie",
          "phone": "66666666"
        }]

### Create a contact [POST]

+ Request (application/json; charset=utf-8)

        {
          "lastname": "Hawk",
          "list_id": 1,
          "firstname": "Tony",
          "phone": "55544433322"
        }

+ Response 201 (application/json; charset=utf-8)

        {
            "id": 1,
            "list_id": 1,
            "lastname": "Hawk",
            "firstname": "Tony",
            "phone": "55544433322"
        }

## Contact [/lists/{list_id}/contacts/{contact_id}]

+ Parameters
    + list_id (required, number, `1`) ... Numeric `id` of the List to perform action with.
    + contact_id (required, number, `1`) ... Numeric `id` of the contact to perform action with. Has example value.


### Retrieve a contact [GET]

+ Response 200 (application/json; charset=utf-8)

        {
          "id": 1,
          "list_id": 1,
          "lastname": "Hawk",
          "firstname": "Tony",
          "phone": "55544433322"
        }

+ Response 404 (application/json; charset=utf-8)

        {
          "error": "resource not found."
        }

### Delete a contact [DELETE]

+ Response 204 

+ Response 404 (application/json; charset=utf-8)

        {
          "error": "resource not found."
        }

### Update a contact [PATCH]

+ Request (application/json; charset=utf-8)

        {
          "lastname": "Guez"
        }

+ Response 200 (application/json; charset=utf-8)

        {
          "id": 1,
          "list_id": 1,
          "lastname": "Guez",
          "firstname": "Tony",
          "phone": "55544433322"
        }

+ Response 400 (application/json; charset=utf-8)

        {
          "phone": "Invalid phone format.",
          "lastname": "Lastname should have a length between 2 and 20 characters.",
          "firstname": "Firstname should have a length between 2 and 20 characters."
        }

+ Response 404 (application/json; charset=utf-8)

        {
          "error": "resource not found."
        }
